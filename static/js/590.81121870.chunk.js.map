{"version":3,"file":"static/js/590.81121870.chunk.js","mappings":"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","sources":["API.js","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.js","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.js","pages/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '90cfe661c2323ab539dac15dcff3c499';\n\nexport const getTrend = async () => {\n  const res = await axios.get(`trending/movie/day`, {\n    params: {\n      api_key: API_KEY\n    },\n  });\n  return res.data.results;\n};\n\nexport const getMovieById = async (id) => {\n  const res = await axios.get(`movie/${id}&language=en-US`, {\n    params: {\n      api_key: API_KEY\n    },\n  });\n  return res.data;\n};\n\nexport const getMovieCast = async (id) => {\n  const res = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return res.data;\n};\n\nexport const getMovieReviews = async (id) => {\n  const res = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return res.data;\n};\n\nexport const getMovieByName = async (name) => {\n  const res = await axios.get(`search/movie/`, {\n    params: {\n      api_key: API_KEY,\n      query: name,\n      language: 'en-US',\n    },\n  });\n  return res.data;\n};\n\n\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const StyledLink = styled(Link)`\n  margin: 16px 0;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;","import { StyledLink } from \"./BackLink.styled\";\nimport { HiArrowLeft } from \"react-icons/hi\";\n\n\nexport const BackLink = ({ to, children }) => {\n    return (\n      <StyledLink to={to}>\n        <HiArrowLeft size=\"24\" />\n        {children}\n      </StyledLink>\n    );\n  };","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    display: flex;\n    border-bottom: 2px solid lightgrey;\n    padding-bottom: 16px;\n`\nexport const Image = styled.img`\n    width: 20vw;\n    margin-right: 32px;\n`\n\nexport const ShortInfo = styled.div`\n    width: 40vw;\n`\n\nexport const LongInfoWrapper = styled.div`\n    border-bottom: 2px solid lightgrey;\n    padding-bottom: 16px;`\nexport const LinkList = styled.ul`\n    display: flex;\n    gap: 16px;\n`\n\nexport const LinkItem = styled.li`\n    padding: 8px 16px;\n    justify-content: center;\n    border: 2px solid orangered;\n    border-radius: 4px;\n\n    &.active {\n        color: white;\n        background-color: orangered;\n    }\n\n    > a {\n        text-decoration: none;\n        color: black;\n        font-weight: 500;\n      }   \n`","import { Wrapper, ShortInfo, Image, LongInfoWrapper, LinkList, LinkItem } from \"./MovieInfo.styled\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nexport function MovieInfo({ movie, location }) {\n    const { title, genres, release_date, vote_average, overview, poster_path} = movie;\n    const poster = poster_path\n    ? 'https://image.tmdb.org/t/p/w500' + poster_path\n    : 'https://dummyimage.com/216x361/000/fff&text=No+poster'; \n    const vote = ((vote_average/10)*100).toFixed(0);\n    const date = release_date?.slice(0, 4) ?? \"\";\n    const genresArr = genres?.map(genre => genre.name).join(', ') ?? \"\";\n    console.log(location);\n    \n    return (\n        <>\n        <Wrapper>\n            <div>\n                <Image  src={poster} alt={title} />\n            </div>\n            <ShortInfo>\n                <h2>{title} {date}</h2>\n                <p>User Score: {vote}%</p>\n                <h4>Overview: </h4>\n                <p>{overview}</p>\n                <h4 >Genres: </h4>\n                <p >{genresArr}</p>\n            </ShortInfo>\n        </Wrapper>\n        <LongInfoWrapper>\n            <h3>Additional information:</h3>\n            <LinkList>\n                <LinkItem>\n                    <Link to=\"cast\" state={{from:location?.state?.from}}>\n                        Cast\n                    </Link>\n                </LinkItem>\n                <LinkItem>\n                    <Link to=\"reviews\" state={{from:location?.state?.from}}>\n                        Review\n                    </Link>\n                </LinkItem>\n            </LinkList>\n        </LongInfoWrapper>\n        </>\n    );\n}\n\nMovieInfo.propTypes = {\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    poster_path: PropTypes.string,\n};","import { useParams, useLocation, Outlet, Link } from \"react-router-dom\";\nimport { useState, useEffect, Suspense } from \"react\";\nimport { getMovieById } from \"../API\";\nimport { BackLink } from \"components/BackLink/BackLink\";\nimport { MovieInfo } from \"components/MovieInfo/MovieInfo\";\nimport { Loader } from \"components/Loader/Loader\";\n\nexport default function MovieDetails(){\n    const { id } = useParams();\n    const [movie, setMovie] = useState([]);\n    const location = useLocation();\n    const backLinkHref = location?.state?.from ?? \"/movies\";\n    // console.log(location);\n    \n    useEffect(() => {\n        (async () => {\n        setMovie(await getMovieById(id));\n        })();\n    }, [id]);\n        \n    return (\n    <main>\n        <BackLink to={backLinkHref}>Go back</BackLink>\n        <MovieInfo movie={movie} location={location}/>\n        <Link to={backLinkHref}>Go back</Link>\n\n        <Suspense fallback={<Loader />}>\n            <Outlet />\n        </Suspense>\n    </main>\n\n  );\n};\n"],"names":["axios","API_KEY","getTrend","params","api_key","res","data","results","getMovieById","id","getMovieCast","language","getMovieReviews","getMovieByName","name","query","StyledLink","styled","Link","BackLink","to","children","size","Wrapper","Image","ShortInfo","LongInfoWrapper","LinkList","LinkItem","MovieInfo","movie","location","title","genres","release_date","vote_average","overview","poster_path","poster","vote","toFixed","date","slice","genresArr","map","genre","join","console","log","src","alt","state","from","MovieDetails","useParams","useState","setMovie","useLocation","backLinkHref","useEffect","Suspense","fallback","Loader"],"sourceRoot":""}