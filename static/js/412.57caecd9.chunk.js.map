{"version":3,"file":"static/js/412.57caecd9.chunk.js","mappings":"2TAEAA,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAQ,mCAAG,oGACJF,IAAAA,IAAA,qBAAgC,CAChDG,OAAQ,CACNC,QAASH,KAHS,cAChBI,EADgB,yBAMfA,EAAIC,KAAKC,SANM,2CAAH,qDASRC,EAAY,mCAAG,WAAOC,GAAP,uFACRT,IAAAA,IAAA,gBAAmBS,EAAnB,mBAAwC,CACxDN,OAAQ,CACNC,QAASH,KAHa,cACpBI,EADoB,yBAMnBA,EAAIC,MANe,2CAAH,sDASZI,EAAY,mCAAG,WAAOD,GAAP,uFACRT,IAAAA,IAAA,gBAAmBS,EAAnB,YAAiC,CACjDN,OAAQ,CACNC,QAASH,EACTU,SAAU,WAJY,cACpBN,EADoB,yBAOnBA,EAAIC,MAPe,2CAAH,sDAUZM,EAAe,mCAAG,WAAOH,GAAP,uFACXT,IAAAA,IAAA,gBAAmBS,EAAnB,YAAiC,CACjDN,OAAQ,CACNC,QAASH,EACTU,SAAU,WAJe,cACvBN,EADuB,yBAOtBA,EAAIC,MAPkB,2CAAH,sDAUfO,EAAc,mCAAG,WAAOC,GAAP,uFACVd,IAAAA,IAAA,eAA0B,CAC1CG,OAAQ,CACNC,QAASH,EACTc,MAAOD,EACPH,SAAU,WALc,cACtBN,EADsB,yBAQrBA,EAAIC,MARiB,2CAAH,qD,2KCzCdU,EAAaC,EAAAA,GAAAA,IAAH,sFAMVC,EAAaD,EAAAA,GAAAA,EAAH,0C,SCFVE,EAAc,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAClBC,EAA2CD,EAA3CC,OAAQC,EAAmCF,EAAnCE,WAAYC,EAAuBH,EAAvBG,WAAYC,EAAWJ,EAAXI,QACjCC,GAAO,OAACH,QAAD,IAACA,EAAAA,EAAcC,GAAYG,MAAM,EAAG,IACjD,OACI,2BACI,UAACV,EAAD,YACI,2BAAI,SAAC,MAAD,IAAJ,IAAoBK,MACpB,SAACH,EAAD,UAAaO,QAEjB,uBAAID,MAGf,ECbgB,SAASG,IAEtB,IAAQlB,GAAOmB,EAAAA,EAAAA,MAAPnB,GACR,GAA8BoB,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KASA,OAPAC,EAAAA,EAAAA,YAAU,YACN,iBAAC,qGACqBpB,EAAAA,EAAAA,IAAgBH,GADrC,OACSJ,EADT,OAEG0B,EAAW1B,EAAIE,SAFlB,0CAAD,EAIH,GAAE,CAACE,KAGJ,8BACCqB,GAAU,wBACFA,EAAQG,KAAI,SAACb,GAAD,OACT,SAAED,EAAF,CAEIC,OAAQA,GADHA,EAAOX,GAFP,OAOnB,4DAGL,C","sources":["API.js","components/ReviewsItem/ReviewsItem.styled.js","components/ReviewsItem/ReviewsItem.js","pages/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '90cfe661c2323ab539dac15dcff3c499';\n\nexport const getTrend = async () => {\n  const res = await axios.get(`trending/movie/day`, {\n    params: {\n      api_key: API_KEY\n    },\n  });\n  return res.data.results;\n};\n\nexport const getMovieById = async (id) => {\n  const res = await axios.get(`movie/${id}&language=en-US`, {\n    params: {\n      api_key: API_KEY\n    },\n  });\n  return res.data;\n};\n\nexport const getMovieCast = async (id) => {\n  const res = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return res.data;\n};\n\nexport const getMovieReviews = async (id) => {\n  const res = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return res.data;\n};\n\nexport const getMovieByName = async (name) => {\n  const res = await axios.get(`search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: name,\n      language: 'en-US',\n    },\n  });\n  return res.data;\n};\n\n\n","import styled from \"styled-components\";\n\nexport const ReviewInfo = styled.div`\n    display: flex;\n    align-items: center;\n    gap: 16px;\n`;\n\nexport const ReviewDate = styled.p`\n    color: gray;\n`\n","import { GiCharacter } from \"react-icons/gi\";\nimport {\n    ReviewInfo,\n    ReviewDate\n} from \"./ReviewsItem.styled\";\n\nexport const ReviewsItem = ({review}) => {\n    const {author, updated_at, created_at, content} = review;\n    const date = (updated_at ?? created_at).slice(0, 10);\n    return(\n        <li>\n            <ReviewInfo>\n                <h4><GiCharacter/> {author}</h4>\n                <ReviewDate>{date}</ReviewDate>\n            </ReviewInfo>\n            <p>{content}</p>\n        </li>\n    )\n}","  import { useParams } from \"react-router-dom\";\n  import { useState, useEffect } from \"react\";\n  import { getMovieReviews } from \"API\";\n  import { ReviewsItem } from \"../components/ReviewsItem/ReviewsItem\";\n  \n  export default function Reviews(){\n\n    const { id } = useParams();\n    const [reviews, setReviews] = useState(null);\n\n    useEffect(() => {\n        (async () => {\n            const res = await getMovieReviews(id);\n            setReviews(res.results);\n        })();\n    }, [id])\n\n    return (\n    <>\n    {reviews ? <ul>\n            {reviews.map((review) => (\n                < ReviewsItem\n                    key={review.id}\n                    review={review}\n                />\n                ))}\n        </ul>\n    : <h3>We don't have any reviews yet.</h3>}\n    </>\n    );\n};"],"names":["axios","API_KEY","getTrend","params","api_key","res","data","results","getMovieById","id","getMovieCast","language","getMovieReviews","getMovieByName","name","query","ReviewInfo","styled","ReviewDate","ReviewsItem","review","author","updated_at","created_at","content","date","slice","Reviews","useParams","useState","reviews","setReviews","useEffect","map"],"sourceRoot":""}