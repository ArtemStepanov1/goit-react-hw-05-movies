{"version":3,"file":"static/js/684.cd08a237.chunk.js","mappings":"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","sources":["API.js","components/MoviesList/MoviesList.styled.js","components/MoviesItem/MoviesItem.styled.js","components/MoviesItem/MoviesItem.js","components/MoviesList/MoviesList.js","components/MovieForm/MovieForm.styled.js","components/MovieForm/MovieForm.js","pages/Movies.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '90cfe661c2323ab539dac15dcff3c499';\n\nexport const getTrend = async () => {\n  const res = await axios.get(`trending/movie/day`, {\n    params: {\n      api_key: API_KEY\n    },\n  });\n  return res.data.results;\n};\n\nexport const getMovieById = async (id) => {\n  const res = await axios.get(`movie/${id}&language=en-US`, {\n    params: {\n      api_key: API_KEY\n    },\n  });\n  return res.data;\n};\n\nexport const getMovieCast = async (id) => {\n  const res = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return res.data;\n};\n\nexport const getMovieReviews = async (id) => {\n  const res = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return res.data;\n};\n\nexport const getMovieByName = async (name) => {\n  const res = await axios.get(`search/movie/`, {\n    params: {\n      api_key: API_KEY,\n      query: name,\n      language: 'en-US',\n    },\n  });\n  return res.data;\n};\n\n\n","import styled from 'styled-components'\n\nexport const MoviesGallery = styled.ul`\n    display: grid; \n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n    grid-gap: 16px;\n    margin-top: 16px;\n    margin-bottom: 0;\n    padding: 0;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n`;","import styled from \"styled-components\";\n\nexport const MoviePoster = styled.img`\n    width: 100%;\n    height: 87%;\n    object-fit: cover;\n    border-radius: 8px 8px 0 0;\n`;\n\nexport const MovieWrapper = styled.li`\n    position: relative;\n    border-radius: 8px;\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover {\n        transform: scale(1.01);\n        cursor: pointer;\n    } \n    > a {\n        text-decoration: none;\n      }   \n`;\n\nexport const MovieVote = styled.span`\n    background-color: orangered;\n    border-radius: 50%;\n    color: #fff;\n    padding: 16px;\n    font-size: 20px;\n    font-weight: 700;\n    position: absolute;\n    top: 16px;\n    left: 16px;\n`;\n\nexport const TitleWrap = styled.div`\n    width: 100%;\n    height: 100px;\n    padding: 8px\n`\n\nexport const MovieTitle = styled.p`\n    font-size: 24px;\n    font-weight: 700;\n    color: black;\n`;","import { Link } from \"react-router-dom\";\nimport { \n    MoviePoster,\n    MovieWrapper,\n    MovieVote,\n    TitleWrap,\n    MovieTitle,\n } from \"./MoviesItem.styled\";\nimport PropTypes from 'prop-types';\n\n\nexport const MoviesItem = ({ movie, state }) => {\n    const { id, title, poster_path, vote_average } = movie;\n    const vote = vote_average ? vote_average.toFixed(1) : \"0.0\";\n    const poster = poster_path\n    ? 'https://image.tmdb.org/t/p/w500' + poster_path\n    : 'https://dummyimage.com/216x361/000/fff&text=No+poster';\n\n    return(\n         <MovieWrapper>\n            <Link to={`/movies/${id}`} state={state}>\n                <MoviePoster src={poster} alt={title}/> \n                <MovieVote>{vote}</MovieVote>\n                <TitleWrap>\n                    <MovieTitle>{title}</MovieTitle>\n                </TitleWrap>\n            </Link>\n        </MovieWrapper>\n    )\n}\n\nMoviesItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n};","import { MoviesGallery } from \"./MoviesList.styled\";\nimport { MoviesItem } from \"../MoviesItem/MoviesItem\";\nimport { useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n    const location = useLocation();\n    return(\n        <MoviesGallery>\n            {movies.map((movie) => (\n                <MoviesItem movie={movie} key={movie.id} state={{from: location}}/>\n            ))} \n        </MoviesGallery>\n    )\n}\n\nMoviesItem.propTypes = {\n    movies: PropTypes.array,\n}","import styled from 'styled-components'\n\nexport const SearchForm = styled.form`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 400px;\n    background-color: #fff;\n    border-radius: 8px;\n    overflow: hidden;\n    border: 2px solid lightgrey;\n    padding-left: 8px;\n    margin: 32px 0;\n`;\n\nexport const SearchFormBtn = styled.button`\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n    &:hover {\n        opacity: 1;\n    }\n`;\n\nexport const SearchFormBtnLabel = styled.span`\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n`;","import { ImSearch } from \"react-icons/im\";\nimport Notiflix from 'notiflix';\nimport {\n    SearchForm,\n    SearchFormBtn,\n    SearchFormBtnLabel,\n    SearchFormInput,\n} from \"./MovieForm.styled\";\n\nexport function MovieForm({ onSearch }) {\n   \n    const onSubmit = e => {\n        e.preventDefault();\n        const inpunValue = e.currentTarget.elements.query.value;\n        if(inpunValue.trim() === ''){ \n            Notiflix.Notify.warning('Enter your query');\n            return;\n        }\n        onSearch(inpunValue);\n        e.currentTarget.reset()\n    };\n\n    return (\n        <SearchForm \n        onSubmit={onSubmit}\n        >\n            <SearchFormInput\n                type=\"text\"\n                name=\"query\"\n                autocomplete=\"off\"\n                autoFocus\n                placeholder=\"Search movie\"\n            />\n\n            <SearchFormBtn type=\"submit\">\n                <SearchFormBtnLabel>Search</SearchFormBtnLabel>\n                <ImSearch/>\n            </SearchFormBtn>\n        </SearchForm>\n    );\n}\n","import { MovieForm } from \"../components/MovieForm/MovieForm\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { getMovieByName } from \"../API\"\nimport { MoviesList } from \"../components/MoviesList/MoviesList\";\n\nexport default function Movies(){\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query') ?? \"\";\n\n    useEffect(() => {\n        if (!query) return;\n        (async () => {\n            const res = await getMovieByName(query);\n            setMovies(res.results);\n        })();\n    }, [query]);\n\n    const handleSearch = ( name ) => {\n        setSearchParams(name !== \"\" ? { query: name } : {})\n    }\n\n    return (\n        <main>\n            <MovieForm onSearch={handleSearch} movies={movies}/>\n            {movies && <MoviesList movies={movies}/>}\n\n        </main>\n    )\n}"],"names":["axios","API_KEY","getTrend","params","api_key","res","data","results","getMovieById","id","getMovieCast","language","getMovieReviews","getMovieByName","name","query","MoviesGallery","styled","MoviePoster","MovieWrapper","MovieVote","TitleWrap","MovieTitle","MoviesItem","movie","state","title","poster_path","vote_average","vote","toFixed","poster","to","src","alt","MoviesList","movies","location","useLocation","map","from","propTypes","PropTypes","SearchForm","SearchFormBtn","SearchFormBtnLabel","SearchFormInput","MovieForm","onSearch","onSubmit","e","preventDefault","inpunValue","currentTarget","elements","value","trim","reset","Notiflix","type","autocomplete","autoFocus","placeholder","Movies","useState","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect"],"sourceRoot":""}